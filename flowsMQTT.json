[
    {
        "id": "dad10cf62400f5f1",
        "type": "ui_colour_picker",
        "z": "6b5a6576040a5637",
        "name": "",
        "label": "",
        "group": "3236ee8421ccdd33",
        "format": "rgb",
        "outformat": "string",
        "showSwatch": true,
        "showPicker": true,
        "showValue": true,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "false",
        "order": 1,
        "width": 5,
        "height": 5,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "8419eaea40d95fd2"
            ]
        ]
    },
    {
        "id": "21137dc601ae76eb",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 120,
        "wires": []
    },
    {
        "id": "8419eaea40d95fd2",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 1",
        "func": "let rgb = msg.payload.match(/\\d+/g); \n\nif (rgb && rgb.length === 3) {\n    let r = rgb[0];\n    let g = rgb[1];\n    let b = rgb[2];\n    \n    let colorData = `R: ${r}, G: ${g}, B: ${b}`;\n    \n    msg.payload = { r: r, g: g, b: b };\n    \n    return [\n        { payload: r, topic: \"r\"},         \n        { payload: g, topic: \"g\"},         \n        { payload: b, topic: \"b\" },\n        { payload: colorData }  \n    ];\n} else {\n    msg.payload = \"Color invÃ¡lido\";\n    return [{ payload: msg.payload }];\n}\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            [],
            [],
            [],
            [
                "dee5d10260cfb163",
                "bbdb11582c9069e8"
            ]
        ]
    },
    {
        "id": "bbdb11582c9069e8",
        "type": "ui_text_input",
        "z": "6b5a6576040a5637",
        "d": true,
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "3236ee8421ccdd33",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 600,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "dee5d10260cfb163",
        "type": "file",
        "z": "6b5a6576040a5637",
        "name": "",
        "filename": "/home/rpiZeroW/color.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 360,
        "wires": [
            [
                "4a6292911fc0efd2"
            ]
        ]
    },
    {
        "id": "4d9d597c8b60179e",
        "type": "inject",
        "z": "6b5a6576040a5637",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "4a6292911fc0efd2"
            ]
        ]
    },
    {
        "id": "4a6292911fc0efd2",
        "type": "exec",
        "z": "6b5a6576040a5637",
        "command": "python3 /home/pi/Documentos/sistemas_digitales3/ultrasonido.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "ec7eeca4951cb20c"
            ],
            [],
            []
        ]
    },
    {
        "id": "ec7eeca4951cb20c",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 400,
        "wires": []
    },
    {
        "id": "c8e81e85fab34492",
        "type": "ui_slider",
        "z": "6b5a6576040a5637",
        "name": "",
        "label": "R - Rojo",
        "tooltip": " {{msg.payload}}",
        "group": "3236ee8421ccdd33",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "4dc565e328f89eb9",
                "8f78d6d307269e26"
            ]
        ]
    },
    {
        "id": "cd805ec144119dde",
        "type": "ui_slider",
        "z": "6b5a6576040a5637",
        "name": "",
        "label": "G - Verde",
        "tooltip": "",
        "group": "3236ee8421ccdd33",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "g",
        "topicType": "msg",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "572010e7cc79df19",
                "28c5faf52dedaf15"
            ]
        ]
    },
    {
        "id": "0ba1949f04239187",
        "type": "ui_slider",
        "z": "6b5a6576040a5637",
        "name": "",
        "label": "B - Azul",
        "tooltip": "",
        "group": "3236ee8421ccdd33",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "b",
        "topicType": "msg",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 660,
        "y": 280,
        "wires": [
            [
                "3fe2256fbc53f2c7",
                "ca99b186d76f72a1"
            ]
        ]
    },
    {
        "id": "4dc565e328f89eb9",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug Rojo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "572010e7cc79df19",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug Verde",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "3fe2256fbc53f2c7",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug Azul",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "a5c810e9fb295368",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 2",
        "func": "let r = msg.payload.r;\nlet g = msg.payload.g;\nlet b = msg.payload.b;\n\nif (\n    Number.isInteger(r) && r >= 0 && r <= 255 &&\n    Number.isInteger(g) && g >= 0 && g <= 255 &&\n    Number.isInteger(b) && b >= 0 && b <= 255\n) {\n    let hex = `#${((1 << 24) | (r << 16) | (g << 8) | b).toString(16).slice(1).toUpperCase()}`;\n    msg.payload = hex;\n} else {\n    msg.payload = \"Valores fuera de rango (0-255)\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 200,
        "wires": [
            [
                "5230ec19a7af3e37"
            ]
        ]
    },
    {
        "id": "5230ec19a7af3e37",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 300,
        "wires": []
    },
    {
        "id": "606e21cf0acc0ae7",
        "type": "join",
        "z": "6b5a6576040a5637",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "a5c810e9fb295368"
            ]
        ]
    },
    {
        "id": "8f78d6d307269e26",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function red",
        "func": "let valorSlider = msg.payload;\n\nmsg.payload = valorSlider;\nmsg.topic = \"r\"; \n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 120,
        "wires": [
            [
                "606e21cf0acc0ae7",
                "1df48663a1a5bd9c"
            ]
        ]
    },
    {
        "id": "28c5faf52dedaf15",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function green",
        "func": "let valorSlider = msg.payload;\n\nmsg.payload = valorSlider;\nmsg.topic = \"g\"; \n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 200,
        "wires": [
            [
                "606e21cf0acc0ae7"
            ]
        ]
    },
    {
        "id": "ca99b186d76f72a1",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function blue",
        "func": "let valorSlider = msg.payload;\n\nmsg.payload = valorSlider;\nmsg.topic = \"b\"; \n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 280,
        "wires": [
            [
                "606e21cf0acc0ae7"
            ]
        ]
    },
    {
        "id": "1df48663a1a5bd9c",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "47da5d021484975e",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "Guardar base64 imagen",
        "func": "let file = msg.payload;\nlet mime = msg.file && msg.file.mimetype ? msg.file.mimetype : \"image/jpeg\";\n\nlet base64str = `data:${mime};base64,${file.toString('base64')}`;\n\nflow.set(\"imagen_base64\", base64str);\nreturn { payload: base64str };\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "e08a1664cabb09e8"
            ]
        ]
    },
    {
        "id": "e08a1664cabb09e8",
        "type": "ui_template",
        "z": "6b5a6576040a5637",
        "group": "4bdebf8e24a1ac57",
        "name": "Mostrar imagen y obtener color",
        "order": 2,
        "width": "8",
        "height": "11",
        "format": "<div style=\"width: 100%; overflow: auto; max-height: 80vh;\">\n    <canvas id=\"canvas\" style=\"display: block; width: 100%; height: auto;\"></canvas>\n</div>\n<p id=\"colorInfo\" style=\"color: white; font-weight: bold;\"></p>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(payload) {\n            // Verificar si el payload es una cadena base64 con imagen\n            if (typeof payload !== 'string' || !payload.startsWith(\"data:image\")) return;\n\n            const canvas = document.getElementById(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            const img = new Image();\n\n            img.onload = function () {\n                // Calcular la proporciÃ³n de la imagen\n                const aspectRatio = img.width / img.height;\n\n                // TamaÃ±o mÃ¡ximo del canvas (ajustable)\n                const maxWidth = 1000;  // MÃ¡ximo ancho para el canvas\n                const maxHeight = 800;  // MÃ¡xima altura para el canvas\n\n                // Ajustar tamaÃ±o del canvas\n                let canvasWidth = img.width;\n                let canvasHeight = img.height;\n\n                // Si la imagen es mÃ¡s ancha que el mÃ¡ximo permitido\n                if (img.width > maxWidth) {\n                    canvasWidth = maxWidth;\n                    canvasHeight = maxWidth / aspectRatio;\n                }\n\n                // Si la imagen es mÃ¡s alta que el mÃ¡ximo permitido\n                if (canvasHeight > maxHeight) {\n                    canvasHeight = maxHeight;\n                    canvasWidth = maxHeight * aspectRatio;\n                }\n\n                // Establecer el tamaÃ±o final del canvas\n                canvas.width = canvasWidth;\n                canvas.height = canvasHeight;\n\n                // Dibujar la imagen en el canvas\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                // Manejar el clic para obtener el color\n                canvas.onclick = function(evt) {\n                    const rect = canvas.getBoundingClientRect();\n                    const scaleX = canvas.width / rect.width;\n                    const scaleY = canvas.height / rect.height;\n\n                    const x = Math.floor((evt.clientX - rect.left) * scaleX);\n                    const y = Math.floor((evt.clientY - rect.top) * scaleY);\n\n                    const pixel = ctx.getImageData(x, y, 1, 1).data;\n                    const rgb = {\n                        r: pixel[0],\n                        g: pixel[1],\n                        b: pixel[2]\n                    };\n\n                    document.getElementById(\"colorInfo\").innerText = `RGB(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n                    scope.send({ payload: { x, y, color: rgb } });\n                };\n            };\n\n            img.src = payload; // Establecer la fuente de la imagen (base64)\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 560,
        "wires": [
            [
                "72901bd19434168d",
                "29f7bd914e5f68fc"
            ]
        ]
    },
    {
        "id": "72901bd19434168d",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "Color seleccionado",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 560,
        "wires": []
    },
    {
        "id": "29f7bd914e5f68fc",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 3",
        "func": "let r = msg.payload.color.r;\nlet g = msg.payload.color.g;\nlet b = msg.payload.color.b;\n\nif (\n    Number.isInteger(r) && r >= 0 && r <= 255 &&\n    Number.isInteger(g) && g >= 0 && g <= 255 &&\n    Number.isInteger(b) && b >= 0 && b <= 255\n) {\n    let hex = `#${((1 << 24) | (r << 16) | (g << 8) | b).toString(16).slice(1).toUpperCase()}`;\n    msg.payload = hex;\n} else {\n    msg.payload = \"Valores fuera de rango (0-255)\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 660,
        "wires": [
            [
                "543ce9c3fce467cb",
                "dad10cf62400f5f1"
            ]
        ]
    },
    {
        "id": "543ce9c3fce467cb",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 660,
        "wires": []
    },
    {
        "id": "8c8428be3f05df87",
        "type": "ui_button",
        "z": "6b5a6576040a5637",
        "name": "",
        "group": "3236ee8421ccdd33",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Activar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "4a6292911fc0efd2"
            ]
        ]
    },
    {
        "id": "2dde6bfaac95af47",
        "type": "ui_upload",
        "z": "6b5a6576040a5637",
        "group": "4bdebf8e24a1ac57",
        "title": "",
        "accept": "",
        "name": "",
        "order": 1,
        "width": "9",
        "height": "1",
        "chunk": "2048",
        "transfer": "base64",
        "x": 220,
        "y": 560,
        "wires": [
            [
                "47da5d021484975e"
            ]
        ]
    },
    {
        "id": "ba2b389ec79cf191",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 4",
        "func": "if (msg.payload === \"\") {\n    return null;\n}\n\n\nlet lines = msg.payload.split('\\n');\n\n\nlet msg1 = null;\nlet msg2 = null;\nlet msg3 = null;\nlet msg4 = null;\nlet msg5 = null;\n\n\nlet regex = /([0-9]+\\.[0-9]+)/;\n\nlines.forEach(line => {\n    let match = line.match(regex);\n    if (match) {\n        let value = parseFloat(match[1]);\n        if (line.includes('Sensor 1')) {\n            msg1 = { payload: value };\n        } else if (line.includes('Sensor 2')) {\n            msg2 = { payload: value };\n        } else if (line.includes('Sensor 3')) {\n            msg3 = { payload: value };\n        } else if (line.includes('Sensor 4')) {\n            msg4 = { payload: value };\n        } else if (line.includes('Sensor 5')) {\n            msg5 = { payload: value };        \n        }\n    }\n});\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "a765979c13900c2e",
                "3bbee2a4c3ec5db3"
            ],
            [
                "d5cc923abfc51ab4",
                "9025caadd26f16bc"
            ],
            [
                "3348e11da28faefa",
                "3ac4978ee178e7bf"
            ],
            [
                "a9ed6754a1bf9931",
                "5726b631a08f7e81"
            ],
            [
                "872326843fe6df87",
                "15f03fef9fc54e05"
            ]
        ]
    },
    {
        "id": "a765979c13900c2e",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 5",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d5cc923abfc51ab4",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 6",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3348e11da28faefa",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 7",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3bbee2a4c3ec5db3",
        "type": "ui_text",
        "z": "6b5a6576040a5637",
        "group": "3236ee8421ccdd33",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel tanque C%",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 360,
        "wires": []
    },
    {
        "id": "9025caadd26f16bc",
        "type": "ui_text",
        "z": "6b5a6576040a5637",
        "group": "3236ee8421ccdd33",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel tanque M%",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 500,
        "wires": []
    },
    {
        "id": "3ac4978ee178e7bf",
        "type": "ui_text",
        "z": "6b5a6576040a5637",
        "group": "3236ee8421ccdd33",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel tanque Y%",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 620,
        "wires": []
    },
    {
        "id": "951884162f50e9af",
        "type": "mqtt in",
        "z": "6b5a6576040a5637",
        "name": "",
        "topic": "sensores/ultrasonico",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5669fbf63480b48d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1190,
        "y": 520,
        "wires": [
            [
                "9845f61d99243e5f",
                "ba2b389ec79cf191"
            ]
        ]
    },
    {
        "id": "9845f61d99243e5f",
        "type": "debug",
        "z": "6b5a6576040a5637",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 580,
        "wires": []
    },
    {
        "id": "a9ed6754a1bf9931",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 9",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "872326843fe6df87",
        "type": "function",
        "z": "6b5a6576040a5637",
        "name": "function 10",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "5726b631a08f7e81",
        "type": "ui_text",
        "z": "6b5a6576040a5637",
        "group": "3236ee8421ccdd33",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel tanque K%",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 720,
        "wires": []
    },
    {
        "id": "15f03fef9fc54e05",
        "type": "ui_text",
        "z": "6b5a6576040a5637",
        "group": "3236ee8421ccdd33",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel tanque W%",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 820,
        "wires": []
    },
    {
        "id": "3236ee8421ccdd33",
        "type": "ui_group",
        "name": "Selector de color",
        "tab": "953203776409de9e",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4bdebf8e24a1ac57",
        "type": "ui_group",
        "name": "Ingrese imagen",
        "tab": "953203776409de9e",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5669fbf63480b48d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "953203776409de9e",
        "type": "ui_tab",
        "name": "Mezclador de pintura",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]